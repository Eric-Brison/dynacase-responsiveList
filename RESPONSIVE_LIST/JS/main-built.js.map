{"version":3,"file":"main-built.js","sources":["RESPONSIVE_LIST/JS/models/document.js","RESPONSIVE_LIST/JS/collections/document.js","RESPONSIVE_LIST/JS/models/search.js","RESPONSIVE_LIST/JS/collections/search.js","RESPONSIVE_LIST/JS/collections/openDocument.js","RESPONSIVE_LIST/JS/views/search.js","RESPONSIVE_LIST/JS/views/searches.js","RESPONSIVE_LIST/JS/views/documentList.js","RESPONSIVE_LIST/JS/views/openDocumentListElement.js","RESPONSIVE_LIST/JS/views/documentWidget.js","RESPONSIVE_LIST/JS/views/openDocument.js","RESPONSIVE_LIST/JS/main.js"],"names":[],"mappings":"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","sourcesContent":["define('rsp/models/document',[\n    \"underscore\",\n    \"backbone\"\n], function (_)\n{\n    \"use strict\";\n\n    return Backbone.Model.extend({\n\n        idAttribute: \"initid\",\n\n        defaults: {\n            state: null,\n            viewId : \"!defaultConsultation\",\n            \"title\" : \"Chargement...\",\n            \"icon\" : false,\n            \"dateSelected\" : 0\n        },\n\n        initialize : function () {\n            this.set(\"dateSelected\", Date.now());\n        },\n\n        isNew: function ()\n        {\n            return true;\n        },\n\n        parse: function (response)\n        {\n            return response.properties;\n        }\n    });\n});\n","define('rsp/collections/document',[\n    \"underscore\",\n    \"rsp/models/document\",\n    \"backbone\"\n], function (_, model)\n{\n    \"use strict\";\n\n    var urlTemplate = _.template(\"<%= urlBase %>?slice=<%= slice %>&offset=<%= offset %>&keyword=<%= keyWord %>\");\n\n    return Backbone.Collection.extend({\n        \"model\": model,\n\n        url: function dc_url()\n        {\n            return urlTemplate(this);\n        },\n\n        initialize: function dc_initialize(values, options)\n        {\n            if (!options.url) {\n                throw new Error(\"the document model needs an url conf\");\n            }\n            this.urlBase = options.url;\n            this.slice = 10;\n            this.offset = 0;\n            this.keyWord = \"\";\n        },\n\n        parse: function dc_parse(response)\n        {\n            this.nbResult = response.data.resultMax;\n            return response.data.documents;\n        },\n\n        reset : function dc_reset() {\n            this.nbResult = null;\n            this.slice = 10;\n            this.offset = 0;\n            return Backbone.Collection.prototype.reset.apply(this, arguments);\n        }\n\n    });\n});\n","define('rsp/models/search',[\n    \"underscore\",\n    \"rsp/collections/document\",\n    \"backbone\"\n], function (_, CollectionDocument)\n{\n    \"use strict\";\n\n    return Backbone.Model.extend({\n\n        idAttribute: \"initid\",\n\n        initialize: function rsp_init()\n        {\n            this.listenTo(this, \"selected\", this.prepareDocumentList);\n            this.set(\"associatedDocumentList\", new CollectionDocument([], {\n                \"url\": window.location.pathname + \"api/v1/rspl/listDocument/\" + this.id\n            }));\n            this.collectionInitialized = false;\n            this.listenTo(this.get(\"associatedDocumentList\"), \"add\", this.propagateAdd);\n            this.listenTo(this.get(\"associatedDocumentList\"), \"reset\", this.propagateReset);\n            this.listenTo(this.get(\"associatedDocumentList\"), \"sync\", this.propagateSync);\n        },\n\n        parse: function (response)\n        {\n            return response.properties;\n        },\n\n        prepareDocumentList: function ()\n        {\n            if (!this.collectionInitialized) {\n                this.get(\"associatedDocumentList\").fetch();\n            }\n        },\n\n        propagateAdd: function propagateAdd(currentDocument)\n        {\n            this.trigger(\"addDocumentList\", this, this.get(\"associatedDocumentList\"), currentDocument);\n        },\n\n        propagateReset: function propagateReset()\n        {\n            this.trigger(\"resetDocumentList\", this, this.get(\"associatedDocumentList\"));\n        },\n\n        propagateSync: function propagateSync()\n        {\n            this.trigger(\"syncDocumentList\", this, this.get(\"associatedDocumentList\"));\n        }\n    });\n});\n","define('rsp/collections/search',[\n    \"underscore\",\n    \"rsp/models/search\",\n    \"backbone\"\n], function (_, model)\n{\n    \"use strict\";\n\n    return Backbone.Collection.extend({\n        \"url\" : window.location.pathname + \"api/v1/rspl/listDocument/DIR_RESPONSIVE_LIST\",\n        \"model\": model,\n\n        parse : function searchCollection_parse(response) {\n            return response.data.documents;\n        }\n    });\n});\n","define('rsp/collections/openDocument',[\n    \"rsp/models/document\",\n    \"backbone\"\n], function (model)\n{\n\n    \"use strict\";\n\n    return Backbone.Collection.extend({\n        \"model\": model,\n\n\n        initialize : function odc__initialize() {\n            this.listenTo(this, \"selected\", this.propagateSelected);\n            this.listenTo(this, \"destroy\", this.selectAnotherOne);\n        },\n\n        propagateSelected : function odc__selected(model, isHidden) {\n            this.each(function odc__isSelected(currentModel) {\n                currentModel.set(\"selected\", model.id === currentModel.id);\n                if (model.id === currentModel.id && isHidden) {\n                    currentModel.set(\"dateSelected\", Date.now());\n                }\n            });\n            this.trigger(\"orderChanged\");\n        },\n\n        selectAnotherOne : function odc_selectAnotherOne(model, collection, options) {\n            var newModel = this.at(options.index) || this.at(options.index - 1);\n            if (model.get(\"selected\")) {\n                if (newModel) {\n                    newModel.trigger(\"selected\", newModel);\n                }\n            }\n            if (this.length === 0) {\n                window.document.title = \"Les documents\";\n            }\n        }\n    });\n});\n","\ndefine('rsp/views/search',[\n    \"underscore\",\n    \"backbone\"\n], function (_)\n{\n    \"use strict\";\n\n    return Backbone.View.extend({\n\n        tagName: \"option\",\n\n        render: function searchView()\n        {\n            this.$el.data(\"searchId\", this.model.id).attr(\"value\", this.model.id).addClass(\"searchElement\").text(this.model.get(\"title\"));\n            return this;\n        }\n\n    });\n});\n","define('rsp/views/searches',[\n    \"underscore\",\n    \"rsp/views/search\",\n    \"backbone\"\n], function (_, SearchView)\n{\n\n    \"use strict\";\n\n    var template = _.template('<select class=\"form-control documentsList__searchList__select\"></select>');\n\n    return Backbone.View.extend({\n\n        tagName: \"form\",\n\n        events: {\n            \"change\": \"displayDocumentList\"\n        },\n\n        initialize: function searches_initialize(options)\n        {\n            if (!options.collection) {\n                throw new Error(\"You need to associate the searches view with a collection\");\n            }\n            this.collection = options.collection;\n            this.listenTo(this.collection, 'add', this._addOne);\n            this.listenTo(this.collection, 'reset', this.render);\n            this.listenTo(this.collection, 'sync', this.displayDocumentList);\n        },\n\n        render: function searches_render()\n        {\n            this.$el.empty().append(template());\n            this._addAll();\n            return this;\n        },\n\n        _addAll: function ()\n        {\n            this.collection.each(this._addOne);\n        },\n\n        _addOne: function (model)\n        {\n            var searchView = new SearchView({model: model});\n            this.$el.find(\".documentsList__searchList__select\").append(searchView.render().$el);\n        },\n\n        displayDocumentList: function ()\n        {\n            var currentSearch = this.$el.find(\".documentsList__searchList__select\").val(), documentModel = this.collection.get(currentSearch);\n            if (documentModel) {\n                documentModel.trigger(\"selected\", documentModel);\n            }\n        }\n    });\n});\n","define('rsp/views/documentList',[\n    \"jquery\",\n    \"underscore\",\n    \"backbone\"\n], function ($, _)\n{\n\n    \"use strict\";\n\n    var template = {\n        \"global\": _.template('<div class=\"documentsList__documents__list__element <%- id %>\">' +\n        '   <div class=\"documentsList__documents__list__element__nbResult clearfix\">' +\n        '       <span class=\"documentsList__documents__list__element__nbResult__container\">Mise à jour...</span>' +\n        '       <button class=\"btn btn-link pull-right documentsList__documents__list__element__reload\"><span class=\"glyphicon glyphicon-repeat pull-right\" aria-hidden=\"true\"></span></button>' +\n        '   </div>' +\n        '   <div class=\"documentsList__documents__list__elements\">' +\n        '       <div class=\"list-group\"></div>' +\n        '       <div class=\"documentsList__documents__list__elements__loading text-center\">' +\n        '         <span class=\"fa fa-circle-o-notch fa-spin\"></span>' +\n        '       </div>' +\n        '   </div>' +\n        '</div>'),\n        \"document\": _.template('<a href=\"?app=DOCUMENT&id=<%- initid %>\" data-id=\"<%- initid %>\" data-title=\"<%- title %>\" class=\"list-group-item documentElement clearfix\"> ' +\n        '   <div class=\"documentElement__title\">' +\n        '     <img src=\"<%- icon %>\" class=\"img-circle documentElement__icon\" />' +\n        '     <%- title %>' +\n        '   </div>' +\n        '   <% if (state) { %> ' +\n        '                    <div class=\"documentElement__state__zone clearfix\">'+\n        '                   <span class=\"label label-default pull-right documentElement__state\" ' +\n        '                           style=\"background-color : <%- state.color %>;' +\n            //compute the complementary grey\n        '                           color : #<%- (\\'000000\\' + ((\\'0xffffff\\' ^ state.color.replace(\"#\", \"0x\")).toString(16))).slice(-6) %>;\">' +\n        '                           <%- state.displayValue %>' +\n        '                   </span></div> ' +\n        '   <% } %>' +\n        '</a>')\n    };\n\n    return Backbone.View.extend({\n\n        events: {\n            \"click .documentsList__documents__list__element__reload\": \"reloadSelected\",\n            \"submit .documentsList__documents__search__form\": \"updateKeyword\",\n            \"click .documentElement\": \"openDocument\"\n        },\n\n        initialize: function dl_initialize(options)\n        {\n            var currentView = this;\n            if (!options.collection) {\n                throw new Error(\"You need to associate the document list view with a collection\");\n            }\n            this.collection = options.collection;\n            this.openDocuments = options.openDocuments;\n            this.listenTo(this.collection, \"selected\", this.displaySelected);\n            this.listenTo(this.collection, \"addDocumentList\", this._addOne);\n            this.listenTo(this.collection, \"resetDocumentList\", this._addAll);\n            this.listenTo(this.collection, \"syncDocumentList\", this._updateNumber);\n            this.listenTo(this.collection, \"syncDocumentList\", this._needToLoadMore);\n            this.listenTo(this, \"reloadDocumentList\", this.reloadAll);\n            this.listenTo(this, \"reloadDocument\", this.reloadDocument);\n            this.listenTo(this, \"removeDocument\", this.removeDocument);\n            this.$el.find(\".documentsList__documents__search__form\").on(\"submit\", function (event)\n            {\n                event.preventDefault();\n                currentView.updateKeyWord(event);\n            });\n            $(window).on(\"resize\", _.debounce(_.bind(this._resize, this), 200));\n        },\n\n        displaySelected: function dl_displaySelected(modelSelected)\n        {\n            var $currentDiv = this.$el.find(\".\" + modelSelected.id);\n            this.$el.find(\".documentsList__documents__list__element\").hide();\n            if ($currentDiv.length === 0) {\n                this._addAll(modelSelected, modelSelected.get(\"associatedDocumentList\"));\n                $currentDiv = this.$el.find(\".\" + modelSelected.id);\n            }\n            this.currentSelectedModel = modelSelected;\n            this.$el.find(\".documentsList__documents__search__keyWord\").val(this.currentSelectedModel.get(\"associatedDocumentList\").keyWord);\n            $currentDiv.show();\n        },\n\n        reloadSelected: function dl_reloadSelected()\n        {\n            this.currentSelectedModel.get(\"associatedDocumentList\").reset();\n            this.currentSelectedModel.get(\"associatedDocumentList\").fetch();\n        },\n\n        reloadAll : function dl_reloadAll() {\n            this.reloadSelected();\n            this.$el(\".documentsList__documents__list__element:hidden\").remove();\n        },\n\n        reloadDocument : function dl_reloadDocument(document) {\n            if (!document.state) {\n                document.state = null;\n            }\n            _.defaults(document, { \"initid\" : \"\", \"title\" : \"\", \"state\" : \"\", \"icon\" : \"\"});\n            this.$el.find(\"[href=#\"+document.initid+\"]\").replaceWith(template.document(document));\n        },\n\n        removeDocument: function dl_removeDocument()\n        {\n            this.reloadSelected();\n            this.$el.find(\"[href=#\" + document.initid + \"]\").remove();\n        },\n\n        updateKeyWord: function dl_updateKeyWord(event)\n        {\n            event.preventDefault();\n            this.currentSelectedModel.get(\"associatedDocumentList\").reset();\n            this.currentSelectedModel.get(\"associatedDocumentList\").keyWord = this.$el.find(\".documentsList__documents__search__keyWord\").val();\n            this.currentSelectedModel.get(\"associatedDocumentList\").fetch();\n        },\n\n        openDocument: function dl_openDocument(event)\n        {\n            var $target = $(event.currentTarget), id = $target.data(\"id\"), document = this.openDocuments.get(id);\n            event.preventDefault();\n            if (document) {\n                document.trigger(\"selected\", document);\n            } else {\n                this.openDocuments.add({initid: id, title: $target.data(\"title\"), icon : $target.find(\".documentElement__icon\").attr(\"src\")});\n            }\n        },\n\n        _getCurrentDiv: function _getCurrentDiv(model)\n        {\n            var $currentDiv = this.$el.find(\".\" + model.id);\n            if ($currentDiv.length === 0) {\n                return false;\n            }\n            return $currentDiv;\n        },\n\n        _addOne: function dl_addOne(model, list, currentDocument)\n        {\n            var $currentDiv = this._getCurrentDiv(model);\n            if ($currentDiv) {\n                $currentDiv.find(\".list-group\").append(template.document(currentDocument.toJSON()));\n            }\n        },\n\n        _addAll: function dl_addAll(model, list)\n        {\n            var addOne = _.bind(this._addOne, this);\n            var $currentDiv = this._getCurrentDiv(model);\n            if ($currentDiv) {\n                $currentDiv.find(\".documentsList__documents__list__elements\").off(\"dl\");\n                $currentDiv.remove();\n            }\n            this.$el.find(\".documentsList__documents__list\").append(template.global(model.toJSON()));\n            this._resize(true);\n            $currentDiv = this._getCurrentDiv(model);\n            if ($currentDiv) {\n                $currentDiv.find(\".documentsList__documents__list__elements\").on(\"scroll.dl\", _.debounce(_.bind(function ()\n                {\n                    this._needToLoadMore(model, list);\n                }, this), 200));\n            }\n            list.each(function (currentDocument)\n            {\n                addOne(model, list, currentDocument);\n            });\n        },\n\n        _updateNumber: function _updateNumber(model, list)\n        {\n            var $currentDiv = this._getCurrentDiv(model), text = \" document\";\n            if ($currentDiv) {\n                if (list.nbResult > 1) {\n                    text = \" documents\";\n                }\n                $currentDiv.find(\".documentsList__documents__list__element__nbResult__container\").text(list.nbResult + text);\n            }\n            this._resize();\n        },\n\n        _needToLoadMore: function _needToLoadMore(model, list)\n        {\n            var $currentDiv = this._getCurrentDiv(model), $loading, maxLength;\n            //test if need loading element\n            if (!$currentDiv) {\n                return;\n            }\n            $loading = $currentDiv.find(\".documentsList__documents__list__elements__loading\");\n            if (list.nbResult !== null && (list.offset + list.slice >= list.nbResult)) {\n                $loading.remove();\n            }\n            else {\n                if (this.$el.is(\":visible\") && this._isElementVisible($loading)) {\n                    list.offset += list.slice;\n                    list.fetch({remove: false});\n                }\n            }\n        },\n\n        _resize: function _resize(noReload)\n        {\n            var $elements = this.$el.find(\".documentsList__documents__list__elements:visible\"), top;\n            if ($elements.length > 0) {\n                top = $elements[0].getBoundingClientRect().top;\n                $elements.height($(window).innerHeight() - top - 10);\n            }\n            if (noReload !== true && this.currentSelectedModel) {\n                this._needToLoadMore(this.currentSelectedModel, this.currentSelectedModel.get(\"associatedDocumentList\"));\n            }\n        },\n\n        _isElementVisible: function isElementInViewport(el)\n        {\n            //special bonus for those using jQuery\n            if (typeof $ === \"function\" && el instanceof $) {\n                el = el[0];\n            }\n\n            var rect = el.getBoundingClientRect();\n\n            return (\n                rect.top >= 0 &&\n                rect.left >= 0 &&\n                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n                rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n            );\n        }\n\n    });\n});\n\n","define('rsp/views/openDocumentListElement',[\n    \"underscore\",\n    \"backbone\"\n], function (_)\n{\n\n    \"use strict\";\n\n    var template = _.template('<a class=\"documentTab\" href=\"?app=DOCUMENT&id=<%- initid %>\" data-id=\"<%- initid %>\" data-title=\"<%- title %>\">' +\n    '<span class=\"documentTab__text\">' +\n    '  <% if (icon) { %><img src=\"<%- icon %>\" class=\"img-circle documentElement__icon\" /> <% } %> <%- title %>' +\n    '</span>' +\n    '<button type=\"button\" class=\"close documentTab__remove\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>' +\n    '</a>');\n\n    return Backbone.View.extend({\n\n        tagName : \"li\",\n        className : \"openDocuments__tab\",\n\n        events : {\n            \"click\" : \"selected\",\n            \"click .documentTab__remove\" : \"remove\"\n        },\n\n        initialize : function opde_initialize() {\n            this.listenTo(this.model, \"change\", this.render);\n            this.listenTo(this.model, \"change:selected\", this.indicateSelected);\n            this.listenTo(this.model, \"destroy\", this.delete);\n        },\n\n        render : function opde__render(options) {\n            options = options || {};\n            this.$el.empty().append(template(this.model.toJSON()));\n            this.$el.attr(\"title\", this.model.get(\"title\"));\n            if (options.hidden) {\n                this.$el.addClass(\"documentTab__hidden clearfix\");\n            }\n            this.indicateSelected();\n            return this;\n        },\n\n        selected : function opde_selected(event) {\n            event.preventDefault();\n            this.model.trigger(\"selected\", this.model, this.$el.is(\".documentTab__hidden\"));\n        },\n\n        indicateSelected : function opde__indicateSelected() {\n            if (this.model.get(\"selected\")) {\n                this.$el.addClass(\"active\");\n            } else {\n                this.$el.removeClass(\"active\");\n            }\n        },\n\n        remove : function opde__remove() {\n            this.model.destroy();\n        },\n\n        \"delete\" : function opde_delete() {\n            this.$el.remove();\n        }\n\n    });\n});\n","define('rsp/views/documentWidget',[\n    \"jquery\",\n    \"underscore\",\n    \"dcpDocument/document\",\n    \"backbone\"\n], function ($, _)\n{\n\n    \"use strict\";\n\n    return Backbone.View.extend({\n\n        className: \"documentsWrapper__div\",\n\n        initialize: function opde_initialize()\n        {\n            //this.listenTo(this.model, \"change:initid\", this.render);\n            this.listenTo(this.model, \"change:selected\", this.indicateSelected);\n            this.listenTo(this.model, \"change:title\", this.indicateSelected);\n            this.listenTo(this.model, \"change\", this.setFrameName);\n            this.listenTo(this.model, \"destroy\", this.delete);\n            $(window).on(\"resize\", _.debounce(_.bind(this._resize, this), 100));\n        },\n\n        render: function dw_render()\n        {\n            var currentView = this, afterLoaded = _.bind(this.indicateSelected, this);\n            this.$el.document(\"fetchDocument\", {\n                \"initid\": this.model.id,\n                \"viewId\": this.model.get(\"viewId\"),\n                withoutResize: true\n            });\n            this.$el.document(\"addEvent\", \"ready\", function (event, document)\n            {\n                currentView.model.set(\"initid\", document.initid);\n                currentView.model.set(\"title\", document.title || \"\");\n                currentView.model.set(\"viewId\", document.viewId);\n                currentView.model.set(\"icon\", document.icon);\n                if (document.title) {\n                    currentView.model.trigger(\"reloadDocument\", document);\n                }\n                $(this).find(\"header\").hide();\n                afterLoaded();\n            });\n            this.$el.document(\"addEvent\", \"beforeClose\", function (event, document, newDocument)\n            {\n                var currentDocument = currentView.model.collection.get(newDocument.initid);\n                if (parseInt(newDocument.initid, 10) === parseInt(currentView.model.get(\"initid\"), 10)) {\n                    currentDocument.trigger(\"selected\", currentDocument);\n                    return;\n                }\n                event.preventDefault();\n                if (currentDocument) {\n                    currentDocument.trigger(\"selected\", currentDocument);\n                } else {\n                    currentView.model.collection.add({initid: newDocument.initid, title: \"Chargement\"});\n                }\n            });\n            this.$el.document(\"addEvent\", \"afterSave\", function (event, document, oldDocument)\n            {\n                // if oldDocument.id => 0 afterCreation save\n                if (oldDocument.id === 0) {\n                    currentView.model.trigger(\"reloadDocumentList\");\n                }\n            });\n            this.$el.document(\"addEvent\", \"afterDelete\", function (event, document, oldDocument)\n            {\n                currentView.model.trigger(\"removeDocument\", document);\n            });\n            this.setFrameName();\n            return this;\n        },\n\n        indicateSelected: function opde__indicateSelected()\n        {\n            if (this.model.get(\"selected\")) {\n                this.$el.show();\n                window.document.title = this.model.get(\"title\");\n                this._resize();\n            } else {\n                this.$el.hide();\n            }\n        },\n\n        _resize: function opde_resize()\n        {\n            var currentView = this, getTop = function (element)\n            {\n                element = element[0];\n                return element.getBoundingClientRect().top + 5;\n            };\n            if (this.$el.is(\":visible\")) {\n                this.$el.find(\"iframe\").height($(window).innerHeight() - getTop(this.$el)).width(this.$el.innerWidth() - 1);\n                _.defer(function secondHeightResize()\n                {\n                    currentView.$el.find(\"iframe\").height($(window).innerHeight() - getTop(currentView.$el));\n                }, 50);\n            }\n        },\n\n        \"delete\": function opde_delete()\n        {\n            this.$el.remove();\n        },\n\n        setFrameName: function opde_setFrameName()\n        {\n            var name = \"document_\" + this.model.get(\"initid\") + \"_\" + this.model.get(\"title\");\n            this.$el.find(\"iframe\").attr(\"name\", name);\n        }\n\n    });\n});\n","define('rsp/views/openDocument',[\n    \"jquery\",\n    \"underscore\",\n    \"rsp/views/openDocumentListElement\",\n    \"rsp/views/documentWidget\",\n    \"backbone\",\n    \"bootstrap\"\n], function ($, _, ViewOpenDocumentListElement, ViewDocumentWidget)\n{\n\n    \"use strict\";\n\n    var template = {\n        \"global\": _.template('<ul class=\"nav nav-tabs documentList\">' +\n        '   <li class=\"openDocuments__openDocumentList visible-xs visible-sm\">' +\n        '       <button type=\"button\" class=\"btn btn-link\">' +\n        '           <span class=\"fa fa-2x fa-bars\"></span>' +\n        '       </button>' +\n        '   </li>' +\n        '   <li class=\"openDocuments__createDocument\">' +\n        '       <div class=\"btn-group\" title=\"Créer un document\">' +\n        '           <button type=\"button\" class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">' +\n        '               <span class=\"glyphicon glyphicon-plus-sign\"></span>' +\n        '               Nouveau <span class=\"caret\"></span>' +\n        '           </button>' +\n        '           <ul class=\"dropdown-menu openDocuments__createDocument__families\" role=\"menu\">' +\n        '           </ul>' +\n        '       </div>' +\n        '   </li>' +\n        '   <li class=\"openDocuments__openDocumentCloseAll pull-right\" title=\"Fermer tous les documents\">' +\n        '       <button type=\"button\" class=\"btn btn-link\"> ' +\n        '           <span class=\"fa fa-times-circle-o\"></span>' +\n        '       </button>' +\n        '   </li>' +\n        '   <li class=\"openDocuments__more pull-right\">' +\n        '       <div class=\"btn-group\" title=\"Plus de documents\">' +\n        '           <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">' +\n        '               <span class=\"caret\"></span> <span class=\"openDocuments__more__number\"></span> <span class=\"fa fa-bars\"></span>' +\n        '           </button>' +\n        '           <ul class=\"dropdown-menu pull-right openDocuments__more__documents\" role=\"menu\">' +\n        '           </ul>' +\n        '       </div>' +\n        '   </li>' +\n        '</ul><div class=\"documentsWrapper\"></div>'),\n        \"families\": _.template('<% _.each(families, function(currentFamily) { %>' +\n        '   <li>' +\n        '       <a class=\"openDocuments__createDocument__familyElement\" href=\"#<%- currentFamily.initid %>\" data-initid=\"<%- currentFamily.initid %>\">' +\n        '          <img src=\"<%- currentFamily.icon %>\" class=\"img-circle documentElement__icon\"><%- currentFamily.title %>' +\n        '      </a>' +\n        '    </li>' +\n        ' <% }); %>')\n    };\n\n    return Backbone.View.extend({\n\n        events: {\n            \"click .openDocuments__openDocumentList\": \"switchSide\",\n            \"click .openDocuments__createDocument__familyElement\": \"openCreation\",\n            \"click .openDocuments__openDocumentCloseAll\": \"closeAll\"\n        },\n\n        initialize: function opd_initialize(options)\n        {\n            if (!options.openDocuments) {\n                throw new Error(\"You need an openDocuments collection\");\n            }\n            this.openDocuments = options.openDocuments;\n            this.listenTo(this.openDocuments, \"add\", this._addDocument);\n            this.listenTo(this.openDocuments, \"selected\", this.openDocumentIHM);\n            this.listenTo(this.openDocuments, \"orderChanged\", this.renderOpenDocument);\n            this.listenTo(this.openDocuments, \"destroy\", this.renderOpenDocument);\n            this.nbMaxOpen = 0;\n            this.isReady = false;\n            $(window).on(\"resize\", _.debounce(_.bind(this._resize, this), 200));\n        },\n\n        render: function opd_render()\n        {\n            this.$el.append(template.global());\n            if (window.dcp.creatable_family.length === 0) {\n                this.$el.find(\".openDocuments__createDocument\").remove();\n            } else {\n                this.$el.find(\".openDocuments__createDocument__families\").append(template.families({families: window.dcp.creatable_family}));\n            }\n            this.isReady = true;\n            this.addPreload();\n            return this;\n        },\n\n        addPreload: function opd_addPreload()\n        {\n            var $preload = $('<div class=\"documentPreload\" style=\"display : none;\"></div>');\n            this.$el.find(\".documentsWrapper\").append($preload);\n            $preload.document({\"initid\": \"VOID_DOCUMENT\"});\n        },\n\n        switchSide: function opd_switchSide()\n        {\n            this.trigger(\"switchSide\");\n        },\n\n        openDocumentIHM: function opd_openDocumentIHM()\n        {\n            this.trigger(\"openDocumentIHM\");\n        },\n\n        openCreation: function opd_openCreation(event)\n        {\n            var $target = $(event.currentTarget);\n            event.preventDefault();\n            this.openDocuments.add({\"initid\": $target.data(\"initid\"), \"viewId\": \"!coreCreation\"});\n        },\n\n        _addDocument: function opd_addDocument(model)\n        {\n            var preload, viewDocument;\n            this.renderOpenDocument();\n            preload = this.$el.find(\".documentPreload\");\n            preload.removeClass(\"documentPreload\");\n            viewDocument = new ViewDocumentWidget({model: model, el: preload});\n            viewDocument.render();\n            model.trigger(\"selected\", model);\n            this.addPreload();\n            viewDocument._resize();\n        },\n\n        renderOpenDocument: function opd_renderOpenDocument()\n        {\n            var nb = 0, nbTotal = this.nbMaxOpen,\n                $targetVisible = this.$el.find(\".documentList\"),\n                $targetOther = this.$(\".openDocuments__more__documents\");\n            $targetVisible.find(\".openDocuments__tab\").remove();\n            $targetOther.empty();\n            _.each(this.openDocuments.sortBy(function odc_comparator(model1)\n            {\n                return -model1.get(\"dateSelected\");\n            }), function (model)\n            {\n                var viewList = new ViewOpenDocumentListElement({model: model});\n                if (nb < nbTotal) {\n                    $targetVisible.append(viewList.render().$el);\n                } else {\n                    $targetOther.append(viewList.render({hidden : true}).$el);\n                }\n                nb += 1;\n            });\n            if (nb > nbTotal) {\n                this.$(\".openDocuments__more\").css(\"visibility\", \"visible\");\n            } else {\n                this.$(\".openDocuments__more\").css(\"visibility\", \"hidden\");\n            }\n            this.$(\".openDocuments__more__number\").text(nb - nbTotal);\n        },\n\n        closeAll: function opd_closeAll()\n        {\n            var model;\n            while (model = this.openDocuments.first()) { // jshint ignore:line\n                model.destroy();\n            }\n        },\n\n        _resize: function opd_resize()\n        {\n            var oldMax = this.nbMaxOpen;\n            //compute space between openDocuments__createDocument and openDocuments__more\n            if (this.isReady) {\n                this.nbMaxOpen = Math.floor((this._getBorder(this.$el.find(\".openDocuments__more\"), \"left\") - this._getBorder(this.$el.find(\".openDocuments__createDocument\"), \"right\") - 10) / 202);\n                if (oldMax !== this.nbMaxOpen) {\n                    this.renderOpenDocument();\n                }\n            }\n        },\n\n        _getBorder: function opd_getBorder(element, position)\n        {\n            element = element[0];\n            return element.getBoundingClientRect()[position];\n\n        }\n\n    });\n});\n\n","/**\n * Created by charles on 10/03/15.\n */\nrequire([\"jquery\",\n    \"underscore\",\n    \"rsp/collections/search\",\n    \"rsp/collections/openDocument\",\n    \"rsp/views/searches\",\n    \"rsp/views/documentList\",\n    \"rsp/views/openDocument\",\n    \"dcpDocument/document\"], function rsp_require($, _, CollectionSearch, CollectionOpenDocument,\n                                                  ViewSearches, ViewDocumentList, ViewOpenDocument)\n{\n\n    \"use strict\";\n\n    var toogleLittleMode = function() {\n        $(\".documentsList\").toggleClass(\"hiddenLittle\");\n        $(\".openDocuments\").toggleClass(\"hiddenLittle\");\n        $(window).trigger(\"resize\");\n    };\n\n    if (!window.dcp.search_list || window.dcp.search_list.length === 0) {\n        $(\".loading--initial\").hide();\n        $(\".error__wrapper\").show();\n        return;\n    }\n\n    window.dcp = window.dcp || {};\n\n    window.dcp.collections = window.dcp.collections || {};\n    window.dcp.views = window.dcp.views || {};\n\n    window.dcp.collections.searches = new CollectionSearch();\n    window.dcp.collections.openDocuments = new CollectionOpenDocument();\n\n    $(document).ready(function rsp_ready()\n    {\n        window.dcp.views.searches = new ViewSearches({\n            el: $(\".documentsList__searchList\"),\n            collection: window.dcp.collections.searches\n        });\n        window.dcp.views.searches.render();\n        window.dcp.views.documentList = new ViewDocumentList({\n            el: $(\".documentsList__documents\"),\n            collection: window.dcp.collections.searches,\n            openDocuments : window.dcp.collections.openDocuments\n        });\n        window.dcp.views.openDocument = new ViewOpenDocument({\n            el: $(\".openDocuments\"),\n            openDocuments: window.dcp.collections.openDocuments\n        });\n        window.dcp.views.openDocument.listenTo(window.dcp.views.openDocument, \"switchSide\", function() {\n            toogleLittleMode();\n        });\n        window.dcp.views.openDocument.listenTo(window.dcp.views.openDocument, \"openDocumentIHM\", function ()\n        {\n            $(\".documentsList\").addClass(\"hiddenLittle\");\n            $(\".openDocuments\").removeClass(\"hiddenLittle\");\n            $(window).trigger(\"resize\");\n        });\n        window.dcp.collections.openDocuments.listenTo(window.dcp.collections.openDocuments, \"reloadDocumentList\", function ()\n        {\n            window.dcp.views.documentList.trigger(\"reloadDocumentList\");\n        });\n        window.dcp.collections.openDocuments.listenTo(window.dcp.collections.openDocuments, \"reloadDocument\", function (currentDocument)\n        {\n            window.dcp.views.documentList.trigger(\"reloadDocument\", currentDocument);\n        });\n        window.dcp.collections.openDocuments.listenTo(window.dcp.collections.openDocuments, \"removeDocument\", function (currentDocument)\n        {\n            window.dcp.views.documentList.trigger(\"removeDocument\", currentDocument);\n        });\n        $(\".documentList__switch\").on(\"click\", function() {\n            toogleLittleMode();\n        });\n        $(\".unlog--button\").on(\"click\", function() {\n           $(\"#disconnect\").submit();\n        });\n        window.dcp.views.openDocument.render();\n        window.dcp.views.documentList.render();\n        window.dcp.collections.searches.add(window.dcp.search_list);\n        window.dcp.views.searches.displayDocumentList();\n        $(\".loading--initial\").hide();\n        $(\".content\").show();\n        $(window).trigger(\"resize\");\n    });\n});\ndefine(\"RESPONSIVE_LIST/JS/main\", function(){});\n\n"]}